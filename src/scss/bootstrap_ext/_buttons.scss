// stylelint-disable selector-no-qualifying-type
//@import "./node_modules/bootstrap/scss/variables";

//
// Base styles
//

.btn {
	display: inline-block;
	font-family: $btn-font-family;
	font-weight: $btn-font-weight;
	color: $button-text-color;
	text-align: center;
	vertical-align: middle;
	user-select: none;
	background-color: $magic-type-background-color;
	border: 1px solid $magic-type-border-faded;
	@include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
	@include transition($btn-transition);
  
	&:hover{
		border-color: $magic-type-border;
		background-color: lighten($magic-type-background-color, 3%);
		color: $button-hover-text-color;
		transition: 0.15s;
	}
  
	&:focus,
	&.focus {
	  outline: 0;
	  box-shadow: $btn-focus-box-shadow;
	}
  
	// Disabled comes first so active can properly restyle
	&.disabled,
	&:disabled {
	  opacity: $btn-disabled-opacity;
	  @include box-shadow(none);
	}
  
	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active {
	  @include box-shadow($btn-active-box-shadow);
  
	  &:focus {
		@include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
	  }
	}
  }
  
  // Future-proof disabling of clicks on `<a>` elements
  a.btn.disabled,
  fieldset:disabled a.btn {
	pointer-events: none;
  }
  
  
  //
  // Alternate buttons
  //
  
  @each $color, $value in $theme-colors {
	.btn-#{$color} {
	  @include button-variant($value, $value);
	}
  }
  
  @each $color, $value in $theme-colors {
	.btn-outline-#{$color} {
	  @include button-outline-variant($value);
	}
  }
  
